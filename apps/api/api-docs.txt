Great ‚Äî now that you want your **Xtopay API documentation** to follow **Hubtel‚Äôs Online Checkout** format, here‚Äôs what we‚Äôll do:

---

## ‚úÖ Let's Create a `checkout.md` (or Docs Page)

We‚Äôll organize your API like this:

---

### üìò Xtopay Checkout API

**Last updated: July 4th, 2025**

---

## üîç Overview

The Xtopay Checkout API allows merchants to collect online payments via:

* Mobile Money (MTN, Vodafone, AirtelTigo)
* Bank Card (Visa, MasterCard)
* Local Wallets (Zeepay, G-Money, etc.)
* QR Code (GhQR)

Merchants can choose between:

* **Redirect Checkout** (customer is redirected to Xtopay)
* **Onsite Checkout** (embed Xtopay in an iframe or modal)

---

## üõí Redirect Checkout ‚Äî How it Works

1. Customer clicks the ‚ÄúPay‚Äù button on the merchant website.
2. Merchant sends a request to Xtopay to initiate the payment.
3. Xtopay returns a `checkoutUrl`.
4. Customer is redirected to the `checkoutUrl`.
5. Customer chooses a payment method and completes payment.
6. Customer is redirected to the merchant's `returnUrl`.
7. Xtopay sends a callback to the merchant‚Äôs `callbackUrl`.

---

## üñºÔ∏è Onsite Checkout ‚Äî How it Works

1. Merchant initiates the checkout via API.
2. The `checkoutDirectUrl` is returned in the response.
3. Merchant embeds this URL inside an iframe or modal.
4. Customer completes payment within the merchant's site.
5. Callback is sent, and customer stays on the same page.

---

## üîÅ Payment Flow (Both Modes)

```mermaid
sequenceDiagram
User ->> Merchant Site: Clicks Pay
Merchant Site ->> Xtopay API: POST /v1/checkout/initiate
Xtopay API -->> Merchant: checkoutUrl / checkoutDirectUrl
User ->> Xtopay: Completes Payment
Xtopay ->> Merchant: Callback to callbackUrl
User ->> Merchant: Redirect to returnUrl
```

---

## üßæ API: Initiate Checkout

**Endpoint:** `POST https://api.xtopay.com/v1/checkout/initiate`
**Auth:** Basic Auth (`base64(api_id:api_key)`)
**Content-Type:** `application/json`

### Request Body

| Field             | Type   | Required | Description                                  |
| ----------------- | ------ | -------- | -------------------------------------------- |
| `amount`          | Float  | ‚úÖ Yes    | Amount to charge (e.g., 10.00)               |
| `description`     | String | ‚úÖ Yes    | Description of the item or service           |
| `callbackUrl`     | String | ‚úÖ Yes    | URL to receive final payment status          |
| `returnUrl`       | String | ‚úÖ Yes    | Where to redirect the customer after payment |
| `cancelUrl`       | String | ‚úÖ Yes    | Redirect URL if user cancels                 |
| `clientReference` | String | ‚úÖ Yes    | Unique transaction ID (max 32 chars)         |
| `payeeName`       | String | Optional | Customer‚Äôs name                              |
| `payeePhone`      | String | Optional | Customer‚Äôs mobile number                     |
| `payeeEmail`      | String | Optional | Customer‚Äôs email address                     |
| `channel`         | String | Optional | `mtn`, `vodafone`, `airteltigo`, etc.        |

### Sample Request

```json
{
  "amount": 100,
  "description": "Online Shoe Order",
  "callbackUrl": "https://merchant.com/callback",
  "returnUrl": "https://merchant.com/thank-you",
  "cancelUrl": "https://merchant.com/cancelled",
  "clientReference": "INV-9823",
  "payeeName": "Collins Joe",
  "payeePhone": "0541234567"
}
```

### Sample Response

```json
{
  "status": "success",
  "data": {
    "checkoutId": "9f28a1fe8e",
    "checkoutUrl": "https://pay.xtopay.com/9f28a1fe8e",
    "checkoutDirectUrl": "https://pay.xtopay.com/9f28a1fe8e/direct",
    "clientReference": "INV-9823"
  }
}
```

---

## üîî Checkout Callback

When a transaction completes, Xtopay sends a `POST` to your `callbackUrl`.

### Sample Callback Payload

```json
{
  "status": "Success",
  "data": {
    "checkoutId": "9f28a1fe8e",
    "clientReference": "INV-9823",
    "amount": 100.0,
    "paymentMethod": "mobilemoney",
    "channel": "mtn",
    "customerPhone": "0541234567",
    "description": "Payment approved",
    "transactionReference": "mtn-2398234",
    "xtopayTransactionId": "XT-83928238"
  }
}
```

---

## ‚úÖ Transaction Status Check

**Endpoint:**
`GET https://api.xtopay.com/v1/checkout/status/{clientReference}`
**Authorization:** Basic Auth
**Use When:** You don‚Äôt receive callback within 5 minutes.

### Sample Response (Paid)

```json
{
  "status": "Paid",
  "data": {
    "transactionId": "XT-83928238",
    "externalId": "mtn-2398234",
    "paymentMethod": "mobilemoney",
    "amount": 100,
    "charges": 2,
    "amountAfterCharges": 98
  }
}
```

---

## üîê Response Codes

| Code | Meaning                        | Action Needed                 |
| ---- | ------------------------------ | ----------------------------- |
| 0000 | Success                        | Proceed                       |
| 2001 | Payment processor error        | Retry after a few minutes     |
| 2050 | MTN Insufficient funds         | Customer should top up wallet |
| 2100 | Phone is off                   | Retry later                   |
| 3009 | Merchant account not available | Check credentials             |
| 4101 | Authorization denied           | Invalid API ID/key            |
| 4505 | Already refunded               | No action needed              |

---

## ‚úÖ Coming Soon

* Webhooks for recurring payments
* Invoice links with auto-expiry
* Refund API

---

Would you like this converted into:

* A Markdown file for GitHub (`checkout.md`)
* A styled page for `docs.xtopay.com`
* An OpenAPI / Swagger spec
* Or a JSON file for internal Copilot context?

Let me know and I‚Äôll generate exactly what you need.
